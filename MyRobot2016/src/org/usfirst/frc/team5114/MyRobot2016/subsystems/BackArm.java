//RobotBuilder Version: 2.0
//
//This file was generated by RobotBuilder. It contains sections of
//code that are automatically generated and assigned by robotbuilder.
//These sections will be updated in the future when you export to
//Java from RobotBuilder. Do not put any code or make any change in
//the blocks indicating autogenerated code or it will be lost on an
//update. Deleting the comments indicating the section will prevent
//it from being updated in the future.


package org.usfirst.frc.team5114.MyRobot2016.subsystems;

import javax.management.timer.Timer;

import org.usfirst.frc.team5114.MyRobot2016.Robot;
import org.usfirst.frc.team5114.MyRobot2016.RobotMap;
import org.usfirst.frc.team5114.MyRobot2016.commands.*;

import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
*
*/
public class BackArm extends Subsystem
{
	 private final CANTalon backArmTalon6 = RobotMap.backArmTalon6;
	
	 // Put methods for controlling this subsystem
	 // here. Call these from Commands.
	 
	 private double backArmSpeed = 0.35;
	 
	 public void dropBackArm(double percentVolt)
	 {
		 // check with donald to make sure that this need not be switched
		 backArmTalon6.set(percentVolt);
	 }
	 
	 public void liftBackArm(double percentVolt)
	 {
		 // check with donald to make sure that this need not be switched
		 backArmTalon6.set(-percentVolt);
	 }
	 
	 public void stop()
	 {
		 backArmTalon6.set(0);
	 }
	 
	 public void driveBackArm()
	 {
		 backArmSpeed = SmartDashboard.getNumber("Back Arm Speed", 0.35);
		 backArmTalon6.set(Robot.oi.controller.getAxis(AxisType.kY) * backArmSpeed);
		 //talon6.enableBrakeMode(true);
	 }
	 
	 /*public void driveHook()
	 {
		 int degreesPOV = Robot.oi.controller.getPOV(0);
		 double hookLiftPercentVolt = SmartDashboard.getNumber("Hook Lift Speed");
		 double hookDropPercentVolt = SmartDashboard.getNumber("Hook Drop Speed");
		 SmartDashboard.putNumber("POV", degreesPOV);
		 
		 
		 if (degreesPOV == 0)
			 hookTalon9.set(hookLiftPercentVolt);
		 else if (degreesPOV == 180)
			 hookTalon9.set(-hookDropPercentVolt);
		 else
			 hookTalon9.set(0);
		 
	 }*/
	 
	 public void initDefaultCommand()
	 {	
	     // Set the default command for a subsystem here.
	     setDefaultCommand(new DriveBackArm());
	 }
}